import React, { useEffect, useState } from "react";
import {
  Layout,
  Typography,
  Button,
  Row,
  Col,
  Card,
  Divider,
  Space,
  message,
  Rate,
  Spin,
} from "antd";
import { Link } from "react-router-dom";
import {
  ArrowRightOutlined,
  StarFilled,
  HeartOutlined,
  UserOutlined,
  TrophyOutlined,
  SafetyOutlined,
  TeamOutlined,
  CheckCircleOutlined,
  RocketOutlined,
  CalendarOutlined,
  DollarOutlined,
} from "@ant-design/icons";
import * as authService from "../../services/authService";
import { getPublishedFeedbacks } from "../../services/feebackService";
// import heroImage from '../assets/images/hero-image.png';
import "../../styles/LandingPage.css"; // Ensure you have the appropriate CSS file

const { Header, Content, Footer } = Layout;
const { Title, Paragraph, Text } = Typography;

// Add custom CSS for toast positioning
const toastStyles = `
  .ant-message {
    position: fixed !important;
    top: 24px !important;
    right: 24px !important;
    left: auto !important;
    transform: none !important;
    z-index: 1050 !important;
  }
  
  .custom-reminder-toast .ant-message-notice {
    position: fixed !important;
    top: 24px !important;
    right: 24px !important;
    left: auto !important;
    transform: none !important;
  }
`;

const LandingPage = () => {
  const [feedbacks, setFeedbacks] = useState([]);
  const [loadingFeedbacks, setLoadingFeedbacks] = useState(true);

  useEffect(() => {
    // Inject custom styles for toast positioning
    const styleElement = document.createElement("style");
    styleElement.innerHTML = toastStyles;
    document.head.appendChild(styleElement);

    console.log("LandingPage mounted successfully");

    // Check for login reminder and show it as toast
    const reminder = authService.getLoginReminder();
    if (reminder) {
      // Configure message settings
      message.config({
        top: 24,
        duration: 10, // Extended duration for better readability
        maxCount: 3,
      });

      const key = `reminder-${Date.now()}`;
      message.info({
        content: (
          <div
            style={{
              padding: "10px 0",
              lineHeight: "1.5",
            }}
          >
            <strong
              style={{
                fontSize: "16px",
                color: "#1890ff",
                display: "block",
                marginBottom: "6px",
              }}
            >
              üîî Nh·∫Øc nh·ªü t·ª´ h·ªá th·ªëng
            </strong>
            <span
              style={{
                fontSize: "14px",
                color: "rgba(0,0,0,0.85)",
                display: "block",
              }}
            >
              {reminder}
            </span>
            <Button
              type="link"
              size="small"
              style={{ padding: "4px 0", marginTop: "8px" }}
              onClick={() => {
                message.destroy(key);
              }}
            >
              ƒê√£ hi·ªÉu
            </Button>
          </div>
        ),
        key,
        duration: 0, // Set to 0 to require manual closing (with the added button)
        style: {
          position: "fixed",
          top: "75px",
          right: "24px",
          left: "auto",
          minWidth: "300px",
          maxWidth: "380px",
          zIndex: 1050,
          boxShadow: "0 6px 16px rgba(0, 0, 0, 0.08)",
          borderRadius: "8px",
          padding: "14px 18px",
          background: "rgba(255, 255, 255, 0.98)",
          backdropFilter: "blur(10px)",
          border: "1px solid rgba(232, 232, 232, 0.8)",
        },
        className: "custom-reminder-toast",
        icon: (
          <span
            role="img"
            aria-label="info"
            style={{ fontSize: "18px", color: "#1890ff" }}
          >
            ‚ÑπÔ∏è
          </span>
        ),
      });
    }

    // Cleanup function
    return () => {
      if (styleElement && styleElement.parentNode) {
        styleElement.parentNode.removeChild(styleElement);
      }
    };
  }, []);

  // Fetch published feedbacks
  useEffect(() => {
    const fetchPublishedFeedbacks = async () => {
      try {
        setLoadingFeedbacks(true);
        const response = await getPublishedFeedbacks();
        console.log("Published feedbacks response:", response);

        if (response && Array.isArray(response)) {
          setFeedbacks(response);
        } else if (response && response.data && Array.isArray(response.data)) {
          setFeedbacks(response.data);
        } else {
          setFeedbacks([]);
        }
      } catch (error) {
        console.error("Error fetching published feedbacks:", error);
        message.error("Kh√¥ng th·ªÉ t·∫£i ph·∫£n h·ªìi t·ª´ ng∆∞·ªùi d√πng");
        setFeedbacks([]);
      } finally {
        setLoadingFeedbacks(false);
      }
    };

    fetchPublishedFeedbacks();
  }, []);

  return (
    <Layout className="landing-page-modern">
      <Content>
        {/* Hero Section */}
        <section className="hero-section-enhanced">
          <div className="hero-background-overlay"></div>
          <div className="floating-elements">
            <div className="float-shape shape-1"></div>
            <div className="float-shape shape-2"></div>
            <div className="float-shape shape-3"></div>
          </div>

          <div className="hero-content-wrapper">
            <Row gutter={[24, 24]} align="middle" justify="center">
              <Col xs={22} sm={20} md={18} lg={16} xl={14}>
                <div
                  className="hero-text-content"
                  style={{ textAlign: "center", padding: "40px 20px" }}
                >
                  <Title
                    level={1}
                    className="hero-title-enhanced"
                    style={{ marginBottom: "32px" }}
                  >
                    H·ªó tr·ª£ cai thu·ªëc l√°{" "}
                    <span className="highlight-gradient">hi·ªáu qu·∫£</span>
                  </Title>
                  <Paragraph
                    className="hero-description-enhanced"
                    style={{
                      textAlign: "center",
                      fontSize: "16px",
                      lineHeight: "1.8",
                      marginBottom: "24px",
                      maxWidth: "100%",
                    }}
                  >
                    Trong b·ªëi c·∫£nh t·ª∑ l·ªá ng∆∞·ªùi h√∫t thu·ªëc ng√†y c√†ng gia tƒÉng, ƒë·∫∑c
                    bi·ªát ·ªü gi·ªõi tr·∫ª, vi·ªác x√¢y d·ª±ng m·ªôt h·ªá th·ªëng c√¥ng ngh·ªá nh·∫±m
                    h·ªó tr·ª£ qu√° tr√¨nh cai nghi·ªán l√† v√¥ c√πng c·∫ßn thi·∫øt. H·ªá th·ªëng
                    c·ªßa ch√∫ng em t·∫≠p trung v√†o vi·ªác theo d√µi h√†nh vi ng∆∞·ªùi d√πng,
                    cung c·∫•p c√°c g·ª£i √Ω can thi·ªáp ph√π h·ª£p, ƒë·ªìng th·ªùi t·∫°o ra m·ªôt
                    m√¥i tr∆∞·ªùng h·ªó tr·ª£ t√≠ch c·ª±c th√¥ng qua ·ª©ng d·ª•ng di ƒë·ªông v√† n·ªÅn
                    t·∫£ng tr·ª±c tuy·∫øn.
                  </Paragraph>
                  <Paragraph
                    className="hero-description-enhanced"
                    style={{
                      textAlign: "center",
                      fontSize: "16px",
                      lineHeight: "1.8",
                      marginBottom: "0",
                      maxWidth: "100%",
                    }}
                  >
                    M·ª•c ti√™u ch√≠nh c·ªßa ƒë·ªÅ t√†i l√† gi√∫p ng∆∞·ªùi h√∫t thu·ªëc t·ª´ng b∆∞·ªõc
                    gi·∫£m ph·ª• thu·ªôc, ti·∫øn t·ªõi t·ª´ b·ªè ho√†n to√†n thu·ªëc l√°, g√≥p ph·∫ßn
                    c·∫£i thi·ªán s·ª©c kh·ªèe c√° nh√¢n v√† c·ªông ƒë·ªìng.
                  </Paragraph>
                </div>
              </Col>
            </Row>
          </div>
        </section>

        {/* Quick Benefits Bar
        <section className="quick-benefits-bar">
          <div className="container-custom">
            <Row gutter={[24, 24]} justify="center">
              <Col xs={12} sm={6}>
                <div className="quick-benefit-item">
                  <SafetyOutlined className="benefit-icon-quick" />
                  <Text strong>An to√†n 100%</Text>
                </div>
              </Col>
              <Col xs={12} sm={6}>
                <div className="quick-benefit-item">
                  <TeamOutlined className="benefit-icon-quick" />
                  <Text strong>C·ªông ƒë·ªìng</Text>
                </div>
              </Col>
              <Col xs={12} sm={6}>
                <div className="quick-benefit-item">
                  <TrophyOutlined className="benefit-icon-quick" />
                  <Text strong>T·ª∑ l·ªá cao</Text>
                </div>
              </Col>
              <Col xs={12} sm={6}>
                <div className="quick-benefit-item">
                  <UserOutlined className="benefit-icon-quick" />
                  <Text strong>Chuy√™n gia</Text>
                </div>
              </Col>
            </Row>
          </div>
        </section> */}

        <Divider className="section-divider" />

        {/* Features Section */}
        <section className="features-section-enhanced">
          <Title level={2} className="section-title-enhanced">
            T√≠nh nƒÉng n·ªïi b·∫≠t
          </Title>
          <Row gutter={[32, 32]}>
            <Col xs={24} sm={12} lg={8}>
              <Card className="feature-card-enhanced" hoverable>
                <div className="feature-icon-wrapper">
                  <CheckCircleOutlined className="feature-icon-large" />
                </div>
                <Title level={4} className="feature-title-enhanced">
                  Theo d√µi ti·∫øn tr√¨nh
                </Title>
                <Paragraph className="feature-description-enhanced">
                  Theo d√µi qu√° tr√¨nh cai thu·ªëc l√° c·ªßa b·∫°n v·ªõi s·ªë li·ªáu th·ªëng k√™
                  tr·ª±c quan v√† c·∫≠p nh·∫≠t li√™n t·ª•c.
                </Paragraph>
                <div className="feature-highlights">
                  <div className="highlight-item">‚úì Bi·ªÉu ƒë·ªì tr·ª±c quan</div>
                  <div className="highlight-item">‚úì Th·ªëng k√™ chi ti·∫øt</div>
                  <div className="highlight-item">‚úì B√°o c√°o ti·∫øn ƒë·ªô</div>
                </div>
              </Card>
            </Col>
            <Col xs={24} sm={12} lg={8}>
              <Card className="feature-card-enhanced" hoverable>
                <div className="feature-icon-wrapper">
                  <TeamOutlined className="feature-icon-large" />
                </div>
                <Title level={4} className="feature-title-enhanced">
                  H·ªó tr·ª£ c·ªông ƒë·ªìng
                </Title>
                <Paragraph className="feature-description-enhanced">
                  K·∫øt n·ªëi v·ªõi c·ªông ƒë·ªìng ng∆∞·ªùi cai thu·ªëc l√° ƒë·ªÉ chia s·∫ª kinh
                  nghi·ªám v√† nh·∫≠n ƒë∆∞·ª£c s·ª± ƒë·ªông vi√™n.
                </Paragraph>
                <div className="feature-highlights">
                  <div className="highlight-item">‚úì Di·ªÖn ƒë√†n th·∫£o lu·∫≠n</div>
                  <div className="highlight-item">‚úì Nh√≥m h·ªó tr·ª£</div>
                  <div className="highlight-item">‚úì Chia s·∫ª th√†nh t·ª±u</div>
                </div>
              </Card>
            </Col>
            <Col xs={24} sm={12} lg={8}>
              <Card className="feature-card-enhanced" hoverable>
                <div className="feature-icon-wrapper">
                  <UserOutlined className="feature-icon-large" />
                </div>
                <Title level={4} className="feature-title-enhanced">
                  T∆∞ v·∫•n chuy√™n gia
                </Title>
                <Paragraph className="feature-description-enhanced">
                  Nh·∫≠n t∆∞ v·∫•n t·ª´ c√°c chuy√™n gia y t·∫ø v·ªÅ ph∆∞∆°ng ph√°p cai thu·ªëc l√°
                  ph√π h·ª£p v·ªõi b·∫°n.
                </Paragraph>
                <div className="feature-highlights">
                  <div className="highlight-item">‚úì T∆∞ v·∫•n 1-1</div>
                  <div className="highlight-item">‚úì L·ªãch h·∫πn linh ho·∫°t</div>
                  <div className="highlight-item">‚úì Theo d√µi s√°t sao</div>
                </div>
              </Card>
            </Col>
          </Row>
        </section>

        {/* Testimonials Section - Dynamic Feedbacks */}
        <section className="testimonials-section-enhanced">
          <Title level={2} className="section-title-enhanced">
            Ph·∫£n h·ªìi t·ª´ ng∆∞·ªùi d√πng
          </Title>

          {loadingFeedbacks ? (
            <div className="loading-wrapper">
              <Spin size="large" />
              <div style={{ marginTop: 16 }}>
                <Text className="loading-text">
                  ƒêang t·∫£i ph·∫£n h·ªìi t·ª´ ng∆∞·ªùi d√πng...
                </Text>
              </div>
            </div>
          ) : feedbacks.length > 0 ? (
            <Row gutter={[24, 24]}>
              {feedbacks.slice(0, 6).map((feedback, index) => (
                <Col xs={24} md={12} lg={8} key={feedback.id || index}>
                  <Card
                    className="testimonial-card-enhanced"
                    style={{ height: "100%" }}
                  >
                    <div className="testimonial-header">
                      <div className="user-avatar-enhanced">
                        <UserOutlined />
                      </div>
                      <div className="user-info-enhanced">
                        <Text strong className="user-name-enhanced">
                          {feedback.memberName ||
                            feedback.user_name ||
                            feedback.authorName ||
                            "Ng∆∞·ªùi d√πng ·∫©n danh"}
                        </Text>
                        {feedback.createdAt && (
                          <div className="user-date-enhanced">
                            <Text type="secondary" style={{ fontSize: 12 }}>
                              {new Date(feedback.createdAt).toLocaleDateString(
                                "vi-VN"
                              )}
                            </Text>
                          </div>
                        )}
                      </div>
                    </div>

                    <div className="testimonial-rating-enhanced">
                      <Rate
                        disabled
                        defaultValue={feedback.star || 5}
                        style={{ fontSize: 16, color: "#faad14" }}
                      />
                    </div>

                    <Paragraph className="testimonial-content-enhanced">
                      "
                      {feedback.content ||
                        feedback.feedback_content ||
                        "Ph·∫£n h·ªìi t√≠ch c·ª±c t·ª´ ng∆∞·ªùi d√πng"}
                      "
                    </Paragraph>
                  </Card>
                </Col>
              ))}
            </Row>
          ) : (
            <div className="no-testimonials-wrapper">
              <Text className="no-testimonials-text">
                Ch∆∞a c√≥ ph·∫£n h·ªìi n√†o t·ª´ ng∆∞·ªùi d√πng
              </Text>
            </div>
          )}
        </section>

        {/* CTA Section */}
        {/* <section className="cta-section-enhanced">
            <div className="cta-background"></div>
            <div className="cta-content-wrapper">
              <Title level={2} className="cta-title-enhanced">
                S·∫µn s√†ng b·∫Øt ƒë·∫ßu h√†nh tr√¨nh cai thu·ªëc l√°?
              </Title>
              <Paragraph className="cta-description-enhanced">
                Tham gia c√πng h√†ng ngh√¨n ng∆∞·ªùi ƒë√£ th√†nh c√¥ng cai thu·ªëc l√°
              </Paragraph>
            </div>
          </section> */}
      </Content>

      <Footer className="landing-footer-enhanced">
        <div className="footer-content-wrapper">
          <Row gutter={[32, 32]} justify={"center"}>
            <Col xs={24} md={8}>
              <Title level={4} className="footer-title-enhanced">
                V·ªÅ ch√∫ng t√¥i
              </Title>
              <Paragraph className="footer-text-enhanced">
                H·ªá th·ªëng h·ªó tr·ª£ cai thu·ªëc l√° - gi√∫p m·ªçi ng∆∞·ªùi c√≥ m·ªôt cu·ªôc s·ªëng
                kh·ªèe m·∫°nh h∆°n.
              </Paragraph>
            </Col>
            <Col xs={24} md={8}>
              <Title level={4} className="footer-title-enhanced">
                Li√™n h·ªá
              </Title>
              <div className="contact-info-enhanced">
                <Paragraph className="footer-text-enhanced">
                  üìß Email: hotro@caithoucla.com
                  <br />
                  üìû ƒêi·ªán tho·∫°i: (024) 3825-1234
                </Paragraph>
              </div>
            </Col>
          </Row>
          <Divider className="footer-divider" />
          <div className="footer-bottom">
            <Text className="copyright-text">
              ¬© 2025 H·ªá th·ªëng h·ªó tr·ª£ cai thu·ªëc l√°. B·∫£o l∆∞u m·ªçi quy·ªÅn.
            </Text>
          </div>
        </div>
      </Footer>
    </Layout>
  );
};

export default LandingPage;
